'''
Необхідно написати програму на Python, яка імітує велику кількість кидків кубиків, обчислює суми чисел, які випадають на кубиках, 
і визначає ймовірність кожної можливої суми.

Створіть симуляцію, де два кубики кидаються велику кількість разів. Для кожного кидка визначте суму чисел, 
які випали на обох кубиках. Підрахуйте, скільки разів кожна можлива сума (від 2 до 12) з’являється у процесі симуляції. 
Використовуючи ці дані, обчисліть імовірність кожної суми.

На основі проведених імітацій створіть таблицю або графік, який відображає ймовірності кожної суми, виявлені 
за допомогою методу Монте-Карло.

Таблиця ймовірностей сум при киданні двох кубиків виглядає наступним чином.
Порівняйте отримані за допомогою методу Монте-Карло результати з аналітичними розрахунками, наведеними в таблиці вище.'''

import random

def monte_carlo_simulation(num_experiments):
    # Ініціалізація словника для підрахунків
    results = {sum_val: 0 for sum_val in range(2, 13)}
    
    # Симуляція кидків
    for _ in range(num_experiments):
        cube1 = random.randint(1, 6)
        cube2 = random.randint(1, 6)
        cubes_sum = cube1 + cube2
        results[cubes_sum] += 1
    
    # Обчислення ймовірностей
    probabilities = {sum_val: count / num_experiments for sum_val, count in results.items()}
    return probabilities

# Виконання симуляції
num_experiments = 20000
probabilities = monte_carlo_simulation(num_experiments)

# Виведення результатів
print("Сума | Ймовірність")
for sum_val, probability in probabilities.items():
    print(f"{sum_val:4} | {probability:.2%}")

print("Результати трішки відрізняються від тих, що в табличці")

